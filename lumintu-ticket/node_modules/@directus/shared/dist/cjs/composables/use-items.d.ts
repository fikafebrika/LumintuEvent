import { Filter, Item } from '../types';
import { ComputedRef, Ref } from 'vue';
declare type Query = {
    limit: Ref<number>;
    fields: Ref<readonly string[]>;
    sort: Ref<string>;
    page: Ref<number>;
    filters: Ref<readonly Filter[]>;
    searchQuery: Ref<string | null>;
};
declare type ManualSortData = {
    item: string | number;
    to: string | number;
};
declare type UsableItems = {
    itemCount: Ref<number | null>;
    totalCount: Ref<number | null>;
    items: Ref<Item[]>;
    totalPages: ComputedRef<number>;
    loading: Ref<boolean>;
    error: Ref<any>;
    changeManualSort: (data: ManualSortData) => Promise<void>;
    getItems: () => Promise<void>;
};
export declare function useItems(collection: Ref<string | null>, query: Query, fetchOnInit?: boolean): UsableItems;
export {};
//# sourceMappingURL=use-items.d.ts.map