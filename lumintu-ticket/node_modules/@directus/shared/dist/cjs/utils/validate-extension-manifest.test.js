"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
describe('', () => {
    it('returns false when passed item with is no name or version', () => {
        expect((0, _1.validateExtensionManifest)({})).toBe(false);
    });
    it('returns false when passed item with is no EXTENSION_PKG_KEY', () => {
        const mockExtension = { name: 'test', version: '0.1' };
        expect((0, _1.validateExtensionManifest)(mockExtension)).toBe(false);
    });
    it('returns false when passed item with is no type, path, source, host, or hidden', () => {
        const mockExtension = { name: 'test', version: '0.1', 'directus:extension': {} };
        expect((0, _1.validateExtensionManifest)(mockExtension)).toBe(false);
    });
    it('returns false when passed item has an invalid type', () => {
        const mockExtension = {
            name: 'test',
            version: '0.1',
            'directus:extension': { type: 'not_extension_type', path: './', source: 'test', host: 'localhost', hidden: true },
        };
        expect((0, _1.validateExtensionManifest)(mockExtension)).toBe(false);
    });
    it('returns true when passed an valid ExtensionManifestRaw', () => {
        const mockExtension = {
            name: 'test',
            version: '0.1',
            'directus:extension': { type: 'pack', path: './', source: 'test', host: 'localhost', hidden: true },
        };
        expect((0, _1.validateExtensionManifest)(mockExtension)).toBe(true);
    });
});
